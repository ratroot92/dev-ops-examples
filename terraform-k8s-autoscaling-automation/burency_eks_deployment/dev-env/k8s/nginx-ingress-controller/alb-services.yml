
apiVersion: v1
kind: Service
metadata:
  name: auth-microservice-cluster-ip
spec:
  ports:
   - port: 3001
     targetPort: 3001
     protocol: TCP
  type: NodePort
  selector:
    app: auth-microservice-pod
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dev-auth
  namespace: default 
  annotations:
   alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
   alb.ingress.kubernetes.io/healthcheck-port: traffic-port
   alb.ingress.kubernetes.io/healthcheck-path: /health-status
   alb.ingress.kubernetes.io/healthcheck-interval-seconds: '300'
   alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
   alb.ingress.kubernetes.io/success-codes: '200'
   alb.ingress.kubernetes.io/healthy-threshold-count: '2'
   alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
   alb.ingress.kubernetes.io/scheme: internet-facing
   alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:476917393332:certificate/cd009bde-b766-4c5a-b704-c2aa1ec8a2e9
   alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80},{"HTTPS":443}]'
   alb.ingress.kubernetes.io/ssl-redirect: '443'
   alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=3600

spec:
  ingressClassName: alb
  rules:
   - host: dev-auth.malikatique.com
     http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service: 
              name: auth-microservice-cluster-ip
              port: 
                number: 3001



---
apiVersion: v1
kind: Service
metadata:
  name: banking-engine-cluster-ip
spec:
  ports:
   - port: 3000
     targetPort: 3000
     protocol: TCP
  type: NodePort
  selector:
    app: banking-engine-pod
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dev-banking
  namespace: default 
  annotations:
   alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
   alb.ingress.kubernetes.io/healthcheck-port: traffic-port
   alb.ingress.kubernetes.io/healthcheck-path: /health-status
   alb.ingress.kubernetes.io/healthcheck-interval-seconds: '300'
   alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
   alb.ingress.kubernetes.io/success-codes: '200'
   alb.ingress.kubernetes.io/healthy-threshold-count: '2'
   alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
   alb.ingress.kubernetes.io/scheme: internet-facing
   alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:476917393332:certificate/cd009bde-b766-4c5a-b704-c2aa1ec8a2e9
   alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80},{"HTTPS":443}]'
   alb.ingress.kubernetes.io/ssl-redirect: '443'
   alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=3600
spec:
  ingressClassName: alb
  rules:
   - host: dev-banking.malikatique.com
     http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service: 
              name: banking-engine-cluster-ip
              port: 
                number: 3000






---
apiVersion: v1
kind: Service
metadata:
  name: control-panel-service-cluster-ip
spec:
  ports:
   - port: 3009
     targetPort: 3009
     protocol: TCP
  type: NodePort
  selector:
    app: control-panel-service-pod
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dev-cp
  namespace: default 
  annotations:
   alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
   alb.ingress.kubernetes.io/healthcheck-port: traffic-port
   alb.ingress.kubernetes.io/healthcheck-path: /health-status
   alb.ingress.kubernetes.io/healthcheck-interval-seconds: '300'
   alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
   alb.ingress.kubernetes.io/success-codes: '200'
   alb.ingress.kubernetes.io/healthy-threshold-count: '2'
   alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
   alb.ingress.kubernetes.io/scheme: internet-facing
   alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:476917393332:certificate/cd009bde-b766-4c5a-b704-c2aa1ec8a2e9
   alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80},{"HTTPS":443}]'
   alb.ingress.kubernetes.io/ssl-redirect: '443'
   alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=3600
spec:
  ingressClassName: alb
  rules:
   - host: dev-cp.malikatique.com
     http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service: 
              name: control-panel-service-cluster-ip
              port: 
                number: 3009








---
apiVersion: v1
kind: Service
metadata:
  name: files-management-service-cluster-ip
spec:
  ports:
   - port: 3007
     targetPort: 3007
     protocol: TCP
  type: NodePort
  selector:
    app: files-management-service-pod
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dev-fms
  namespace: default 
  annotations:
   alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
   alb.ingress.kubernetes.io/healthcheck-port: traffic-port
   alb.ingress.kubernetes.io/healthcheck-path: /health-status
   alb.ingress.kubernetes.io/healthcheck-interval-seconds: '300'
   alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
   alb.ingress.kubernetes.io/success-codes: '200'
   alb.ingress.kubernetes.io/healthy-threshold-count: '2'
   alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
   alb.ingress.kubernetes.io/scheme: internet-facing
   alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:476917393332:certificate/cd009bde-b766-4c5a-b704-c2aa1ec8a2e9
   alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80},{"HTTPS":443}]'
   alb.ingress.kubernetes.io/ssl-redirect: '443'
   alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=3600
spec:
  ingressClassName: alb
  rules:
   - host: dev-fms.malikatique.com
     http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service: 
              name: files-management-service-cluster-ip
              port: 
                number: 3007






---
apiVersion: v1
kind: Service
metadata:
  name: logs-service-cluster-ip
spec:
  ports:
   - port: 3008
     targetPort: 3008
     protocol: TCP
  type: NodePort
  selector:
    app: logs-service-pod
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dev-log
  namespace: default 
  annotations:
   alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
   alb.ingress.kubernetes.io/healthcheck-port: traffic-port
   alb.ingress.kubernetes.io/healthcheck-path: /health-status
   alb.ingress.kubernetes.io/healthcheck-interval-seconds: '300'
   alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
   alb.ingress.kubernetes.io/success-codes: '200'
   alb.ingress.kubernetes.io/healthy-threshold-count: '2'
   alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
   alb.ingress.kubernetes.io/scheme: internet-facing
   alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:476917393332:certificate/cd009bde-b766-4c5a-b704-c2aa1ec8a2e9
   alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80},{"HTTPS":443}]'
   alb.ingress.kubernetes.io/ssl-redirect: '443'
   alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=3600
spec:
  ingressClassName: alb
  rules:
   - host: dev-log.malikatique.com
     http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service: 
              name: logs-service-cluster-ip
              port: 
                number: 3008







---
apiVersion: v1
kind: Service
metadata:
  name:  matching-engine-cluster-ip
spec:
  ports:
   - port: 3010
     targetPort: 3010
     protocol: TCP
  type: NodePort
  selector:
    app:  matching-engine-pod
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dev-me
  namespace: default 
  annotations:
   alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
   alb.ingress.kubernetes.io/healthcheck-port: traffic-port
   alb.ingress.kubernetes.io/healthcheck-path: /health-status
   alb.ingress.kubernetes.io/healthcheck-interval-seconds: '300'
   alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
   alb.ingress.kubernetes.io/success-codes: '200'
   alb.ingress.kubernetes.io/healthy-threshold-count: '2'
   alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
   alb.ingress.kubernetes.io/scheme: internet-facing
   alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:476917393332:certificate/cd009bde-b766-4c5a-b704-c2aa1ec8a2e9
   alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80},{"HTTPS":443}]'
   alb.ingress.kubernetes.io/ssl-redirect: '443'
   alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=3600
spec:
  ingressClassName: alb
  rules:
   - host: dev-me.malikatique.com
     http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service: 
              name:  matching-engine-cluster-ip
              port: 
                number: 3010







---
apiVersion: v1
kind: Service
metadata:
  name:  notifications-service-cluster-ip
spec:
  ports:
   - port: 3006
     targetPort: 3006
     protocol: TCP
  type: NodePort
  selector:
    app: notifications-service-pod
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dev-ns
  namespace: default 
  annotations:
   alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
   alb.ingress.kubernetes.io/healthcheck-port: traffic-port
   alb.ingress.kubernetes.io/healthcheck-path: /health-status
   alb.ingress.kubernetes.io/healthcheck-interval-seconds: '300'
   alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
   alb.ingress.kubernetes.io/success-codes: '200'
   alb.ingress.kubernetes.io/healthy-threshold-count: '2'
   alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
   alb.ingress.kubernetes.io/scheme: internet-facing
   alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:476917393332:certificate/cd009bde-b766-4c5a-b704-c2aa1ec8a2e9
   alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80},{"HTTPS":443}]'
   alb.ingress.kubernetes.io/ssl-redirect: '443'
   alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=3600
spec:
  ingressClassName: alb
  rules:
   - host: dev-ns.malikatique.com
     http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service: 
              name:  notifications-service-cluster-ip
              port: 
                number: 3006





---
apiVersion: v1
kind: Service
metadata:
  name:  blockchain-engine-cluster-ip
spec:
  ports:
   - port: 3012
     targetPort: 3012
     protocol: TCP
  type: NodePort
  selector:
    app: blockchain-engine-pod
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dev-blockchain
  namespace: default 
  annotations:
   alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
   alb.ingress.kubernetes.io/healthcheck-port: traffic-port
   alb.ingress.kubernetes.io/healthcheck-path: /health-status
   alb.ingress.kubernetes.io/healthcheck-interval-seconds: '300'
   alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
   alb.ingress.kubernetes.io/success-codes: '200'
   alb.ingress.kubernetes.io/healthy-threshold-count: '2'
   alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
   alb.ingress.kubernetes.io/scheme: internet-facing
   alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:476917393332:certificate/cd009bde-b766-4c5a-b704-c2aa1ec8a2e9
   alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80},{"HTTPS":443}]'
   alb.ingress.kubernetes.io/ssl-redirect: '443'
   alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=3600
spec:
  ingressClassName: alb
  rules:
   - host: dev-bc.malikatique.com
     http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service: 
              name:  blockchain-engine-cluster-ip
              port: 
                number: 3012






---
apiVersion: v1
kind: Service
metadata:
  name:  user-microservice-cluster-ip
spec:
  ports:
   - port: 3002
     targetPort: 3002
     protocol: TCP
  type: NodePort
  selector:
    app: user-microservice-pod
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dev-user
  namespace: default 
  annotations:
   alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
   alb.ingress.kubernetes.io/healthcheck-port: traffic-port
   alb.ingress.kubernetes.io/healthcheck-path: /health-status
   alb.ingress.kubernetes.io/healthcheck-interval-seconds: '300'
   alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
   alb.ingress.kubernetes.io/success-codes: '200'
   alb.ingress.kubernetes.io/healthy-threshold-count: '2'
   alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
   alb.ingress.kubernetes.io/scheme: internet-facing
   alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:476917393332:certificate/cd009bde-b766-4c5a-b704-c2aa1ec8a2e9
   alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80},{"HTTPS":443}]'
   alb.ingress.kubernetes.io/ssl-redirect: '443'
   alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=3600
spec:
  ingressClassName: alb
  rules:
   - host: dev-user.malikatique.com
     http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service: 
              name:  user-microservice-cluster-ip
              port: 
                number: 3002





---
apiVersion: v1
kind: Service
metadata:
  name:  burency-client-react-cluster-ip
spec:
  ports:
   - port: 3005
     targetPort: 3005
     protocol: TCP
  type: NodePort
  selector:
    app: burency-client-react-pod
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dev-client
  namespace: default 
  annotations:
   alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
   alb.ingress.kubernetes.io/healthcheck-port: traffic-port
   alb.ingress.kubernetes.io/healthcheck-path: /health-status
   alb.ingress.kubernetes.io/healthcheck-interval-seconds: '300'
   alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
   alb.ingress.kubernetes.io/success-codes: '200'
   alb.ingress.kubernetes.io/healthy-threshold-count: '2'
   alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
   alb.ingress.kubernetes.io/scheme: internet-facing
   alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:476917393332:certificate/cd009bde-b766-4c5a-b704-c2aa1ec8a2e9
   alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80},{"HTTPS":443}]'
   alb.ingress.kubernetes.io/ssl-redirect: '443'
   alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=3600
spec:
  ingressClassName: alb
  rules:
   - host: dev-burency.malikatique.com
     http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service: 
              name: burency-client-react-cluster-ip
              port: 
                number: 3005






---
apiVersion: v1
kind: Service
metadata:
  name:  burency-admin-react-cluster-ip
spec:
  ports:
   - port: 3004
     targetPort: 3004
     protocol: TCP
  type: NodePort
  selector:
    app: burency-admin-react-pod
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dev-admin
  namespace: default 
  annotations:
   alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
   alb.ingress.kubernetes.io/healthcheck-port: traffic-port
   alb.ingress.kubernetes.io/healthcheck-path: /health-status
   alb.ingress.kubernetes.io/healthcheck-interval-seconds: '300'
   alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
   alb.ingress.kubernetes.io/success-codes: '200'
   alb.ingress.kubernetes.io/healthy-threshold-count: '2'
   alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
   alb.ingress.kubernetes.io/scheme: internet-facing
   alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:476917393332:certificate/cd009bde-b766-4c5a-b704-c2aa1ec8a2e9
   alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80},{"HTTPS":443}]'
   alb.ingress.kubernetes.io/ssl-redirect: '443'
   alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=3600
spec:
  ingressClassName: alb
  rules:
   - host: dev-admin.malikatique.com
     http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service: 
              name: burency-admin-react-cluster-ip
              port: 
                number: 3004